security:
    encoders:
        App\Entity\User:
            algorithm: auto
    role_hierarchy:
        ROLE_EMPLOYER: ROLE_EMPLOYER
        ROLE_WORKER: ROLE_WORKER
        ROLE_USER : [ROLE_EMPLOYER,ROLE_WORKER]
        ROLE_ADMIN: ROLE_ADMIN
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_USER, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            switch_user: true
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            logout:
                path: app.logout
                target: app.login

            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 2592000 # 30 jours, c'est optionnel, par defaut c'est 1 an

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/area, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/area/user/change-password, roles: ROLE_SUPER_ADMIN }
        - { path: ^/area/user, roles: ROLE_ADMIN }
        - { path: ^/area/profile, roles: ROLE_ADMIN }
        - { path: ^/admin/parameter, roles: [ROLE_SUPER_ADMIN, ROLE_ADMIN] }

